Eu tenho um projeto Next.js usando ShadCN e estou tentando fazer um carrossel com alguns cards. Estou usando classes como basis-1/2 md:basis-1/4 lg:basis-1/6 para definir que quero no máximo 6 itens visíveis na tela.

O problema é que, quando a página carrega, todos os itens aparecem um do lado do outro numa única "página", ao invés de mostrar só 6 por vez como num carrossel de verdade.

Como faço pra limitar isso e criar a navegação entre as páginas do carrossel?

elemento pai:
'use client';

import { HTTP } from '@/service/axios';
import { IFilme } from '@/interface/IFilme';
import { useEffect, useState } from 'react';
import CarouselWithPagination from '@/components/carousel-06';

const ContainerCards = () => {
  const [filmes, setFilmes] = useState<IFilme[] | null>(null);

  useEffect(() => {
    HTTP.dataFilmes
      .get('/data')
      .then((res) => setFilmes(res.data as IFilme[]))
      .catch((err) => console.error(err));
  }, []);

  if (filmes === null) return null;

  const generos = Array.from(
    new Set(filmes.flatMap((f) => f.dados.genres.map((g) => g.name)))
  ).sort((a, b) => a.localeCompare(b));

  return (
    <section className="-mt-[6rem] pb-3 md:px-5 md:-mt-[9.25rem] flex flex-col gap-15 relative z-10">
      {generos.map((genero, i) => (
        <div key={i}>
          <h1 className="text-2xl md:text-3xl px-3 md:px-15 font-semibold text-text mb-2">
            {genero}:
          </h1>
          <CarouselWithPagination filmes={filmes} genero={genero} />
        </div>
      ))}
    </section>
  );
};
 
export default ContainerCards;

'use client';

import * as React from 'react';

import {
  Carousel,
  CarouselContent,
  CarouselItem,
  CarouselNext,
  CarouselPrevious,
  type CarouselApi,
} from '@/components/ui/carousel';
import { cn } from '@/lib/utils';
import CardFilme from './CardFilme';
import { IFilme } from '@/interface/IFilme';

interface Props {
  filmes: IFilme[];
  genero: string;
}

export default function CarouselWithPagination({ filmes, genero }: Props) {
  const [api, setApi] = React.useState<CarouselApi>();
  const [current, setCurrent] = React.useState(0);
  const [count, setCount] = React.useState(0);

  React.useEffect(() => {
    if (!api) {
      return;
    }

    setCount(api.scrollSnapList().length);
    setCurrent(api.selectedScrollSnap() + 1);

    api.on('select', () => {
      setCurrent(api.selectedScrollSnap() + 1);
    });
  }, [api, filmes]);

  return (
    <div className="mx-auto w-full md:px-10">
      <Carousel setApi={setApi} className="w-full">
        <CarouselContent>
          {filmes
            .filter((f) => f.dados.genres.some((g) => g.name === genero))
            .map((filme, idx) => (
              <div key={idx} className="hs-carousel-slide px-1">
                <CarouselItem
                  className="basis-1/2 md:basis-1/4 lg:basis-1/6"
                  key={idx}
                >
                  <CardFilme filme={filme} />
                </CarouselItem>
              </div>
            ))}
        </CarouselContent>
        <CarouselPrevious className="hidden md:flex" />
        <CarouselNext className="hidden md:flex" />
      </Carousel>
      <div className="mt-4 flex items-center justify-end gap-2">
        {Array.from({ length: count }).map((_, index) => (
          <button
            key={index}
            onClick={() => api?.scrollTo(index)}
            className={cn('h-3.5 w-3.5 rounded-full border-2 border-white/80', {
              'border-primary bg-primary': current === index + 1,
            })}
          />
        ))}
      </div>
    </div>
  );
}
 
import { IFilme } from '@/interface/IFilme';
import Link from 'next/link';

interface Props {
  filme: IFilme;
}

const CardFilme = ({ filme }: Props) => {
  return (
    <Link
      href={/filme?id=${filme.id}}
      className="relative shadow-2xs cursor-pointer group"
    >
      <img
        className="w-full h-32 md:h-40 rounded-card object-cover object-center"
        src={https://image.tmdb.org/t/p/w500${filme.dados.backdrop_path}}
        alt={Card do filme ${filme.nome}}
      />
      <div
        style={{ transitionDuration: '.1s' }}
        className="absolute group-hover:opacity-0 bg-background/60 h-full rounded-card top-0 start-0 end-0"
      >
        <div className="p-4 md:p-5">
          <h3 className="text-sm md:text-md lg:text-lg font-bold text-white break-words">
            {filme.nome}
          </h3>
          <p className="hidden md:block text-white">
            {filme.dados.tagline || ''}
          </p>
        </div>
      </div>
    </Link>
  );
};

export default CardFilme; 